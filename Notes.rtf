{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\fmodern\fcharset0 Courier;\f1\fnil\fcharset0 AndaleMono;\f2\fnil\fcharset0 Menlo-Regular;
\f3\fnil\fcharset0 HelveticaNeue;\f4\fnil\fcharset0 Monaco;\f5\fswiss\fcharset0 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red44\green44\blue44;\red0\green0\blue0;\red0\green0\blue0;
\red27\green31\blue34;\red244\green246\blue249;\red255\green255\blue255;\red225\green226\blue231;\red31\green32\blue41;
\red20\green156\blue146;\red69\green187\blue62;\red215\green0\blue143;\red211\green35\blue46;\red47\green255\blue18;
\red0\green0\blue0;\red46\green174\blue187;\red159\green160\blue28;\red47\green180\blue29;\red64\green11\blue217;
}
{\*\expandedcolortbl;;\cssrgb\c22745\c22745\c22745;\csgray\c0\c0;\cssrgb\c0\c0\c0;
\cssrgb\c14118\c16078\c18039;\cssrgb\c96471\c97255\c98039;\cssrgb\c100000\c100000\c100000;\csgenericrgb\c88217\c88535\c90427;\csgenericrgb\c12157\c12549\c16078;
\csgenericrgb\c7843\c61177\c57255;\csgenericrgb\c26985\c73392\c24249;\csgenericrgb\c84398\c0\c55980;\csgenericrgb\c82745\c13725\c18039;\cssrgb\c15686\c99608\c7843;
\csgray\c0\c90000;\cssrgb\c20198\c73241\c78251;\cssrgb\c68469\c68013\c14209;\cssrgb\c20239\c73899\c14948;\cssrgb\c32309\c18668\c88228;
}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
# a guide to install server for motor_control server\
# in case your SSH key not working and you get something like this\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs24 \cf4 \kerning1\expnd0\expndtw0 \CocoaLigature0 #@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\
#@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @\
#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
\f0\fs28 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf2 \
# use this command\
\
>ssh-keygen -R "you server hostname or ip"\
\pard\pardeftab720\partightenfactor0
\cf2 \
\
# so, now lets update and upgrade our raspberry pi and install additional libraries\
\
>sudo apt-get update\
>sudo apt-get dist-upgrade\
>sudo apt-get rpi.gpio\
>sudo apt-get install python-twisted\
\
# this is how to make a hotspot from our raspberry pi (but don't forget to include our command in /etc/rc.local)\
\
\pard\pardeftab720\partightenfactor0

\f2\fs27\fsmilli13600 \cf5 \cb6 git clone https://github.com/quangthanh010290/RPI3_HOTSPOTS.git\
sudo ./install.sh
\f0\fs28 \cf2 \cb3 \
\pard\pardeftab720\partightenfactor0

\f3\fs32 \cf5 \cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf5 \cb7 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Station mode: sudo sta [SSID] [password] - Connect to a network with specific ssid name and password ,example:\cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs27\fsmilli13600 \cf5 \cb6 sudo sta mySSID  myPass\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0
\f3\fs32 \cf5 \cb7 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
AP mode: sudo ap [SSID] [pass] - Create an wifi hotspot with specific ssid and pass ,example:\cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs27\fsmilli13600 \cf5 \cb6 sudo ap my_ssid 12345678
\f0\fs28 \cf2 \cb3 \
\
# do not forget to make our raspberry pi have a static ip address \
\
\pard\pardeftab720\partightenfactor0

\f4 \cf2 \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97 this part is missing for now \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97
\f0 \
\
# lets create our script\
\
>sudo nano /home/pi/iphoneserver.py\
\
# here\'92s the script:\
\
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f2\fs24 \cf8 \cb9 \kerning1\expnd0\expndtw0 from twisted.internet.protocol import Protocol, Factory
\f5 \cf0 \

\f2 \cf8 from twisted.internet import reactor
\f5 \cf0 \
\

\f2 \cf8 import RPi.GPIO as GPIO
\f5 \cf0 \
\

\f2 \cf8 GPIO.setmode(GPIO.BCM)
\f5 \cf0 \
\

\f2 \cf8 pinList = [\cf10 2\cf8 , \cf10 3\cf8 , \cf10 4\cf8 , \cf10 17\cf8 , \cf10 27\cf8 , \cf10 22\cf8 , \cf10 10\cf8 , \cf10 9\cf8 ]
\f5 \cf0 \
\

\f2 \cf11 # loop through pins and set mode and state to 'low'
\f5 \cf0 \
\

\f2 \cf12 for\cf8  i \cf12 in\cf8  pinList:
\f5 \cf0 \

\f2 \cf8 GPIO.setup(i, GPIO.OUT)
\f5 \cf0 \

\f2 \cf12 for\cf8  i \cf12 in\cf8  pinList:
\f5 \cf0 \

\f2 \cf8 GPIO.output(i, GPIO.HIGH)
\f5 \cf0 \
\

\f2 \cf8 class RaspberryLight(Protocol):
\f5 \cf0 \

\f2 \cf8 def connectionMade(self):
\f5 \cf0 \

\f2 \cf11 #self.transport.write("""connected""")
\f5 \cf0 \

\f2 \cf8 self.factory.clients.append(self)
\f5 \cf0 \

\f2 \cf8 print \cf13 "clients are "\cf8 , self.factory.clients
\f5 \cf0 \
\

\f2 \cf8 def connectionLost(self, reason):
\f5 \cf0 \

\f2 \cf8 print \cf13 "connection lost "\cf8 , self.factory.clients
\f5 \cf0 \

\f2 \cf8 self.factory.clients.remove(self)
\f5 \cf0 \
\

\f2 \cf8 def dataReceived(self, data):
\f5 \cf0 \
\

\f2 \cf11 #motor1 UP
\f5 \cf0 \

\f2 \cf12 if\cf8  (data == \cf13 'Motor1UP'\cf8 ):
\f5 \cf0 \

\f2 \cf8 GPIO.output(\cf10 2\cf8 , GPIO.LOW)
\f5 \cf0 \

\f2 \cf8 GPIO.output(\cf10 3\cf8 , GPIO.HIGH)
\f5 \cf0 \
\

\f2 \cf11 #motor1 STOP
\f5 \cf0 \

\f2 \cf12 if\cf8  (data == \cf13 'Motor1STOP'\cf8 ):
\f5 \cf0 \

\f2 \cf8 GPIO.output(\cf10 2\cf8 , GPIO.HIGH)
\f5 \cf0 \

\f2 \cf8 GPIO.output(\cf10 3\cf8 , GPIO.HIGH)
\f5 \cf0 \
\

\f2 \cf11 #motor1 DOWN
\f5 \cf0 \

\f2 \cf12 if\cf8  (data == \cf13 'Motor1DOWN'\cf8 ):
\f5 \cf0 \

\f2 \cf8 GPIO.output(\cf10 2\cf8 , GPIO.HIGH)
\f5 \cf0 \

\f2 \cf8 GPIO.output(\cf10 3\cf8 , GPIO.LOW)
\f5 \cf0 \
\

\f2 \cf11 #motor2 UP
\f5 \cf0 \

\f2 \cf12 if\cf8  (data == \cf13 'Motor2UP'\cf8 ):
\f5 \cf0 \

\f2 \cf8 GPIO.output(\cf10 4\cf8 , GPIO.LOW)
\f5 \cf0 \

\f2 \cf8 GPIO.output(\cf10 17\cf8 , GPIO.HIGH)
\f5 \cf0 \
\

\f2 \cf11 #motor2 STOP
\f5 \cf0 \

\f2 \cf12 if\cf8  (data == \cf13 'Motor2STOP'\cf8 ):
\f5 \cf0 \

\f2 \cf8 GPIO.output(\cf10 4\cf8 , GPIO.HIGH)
\f5 \cf0 \

\f2 \cf8 GPIO.output(\cf10 17\cf8 , GPIO.HIGH)
\f5 \cf0 \
\

\f2 \cf11 #motor2 DOWN
\f5 \cf0 \

\f2 \cf12 if\cf8  (data == \cf13 'Motor2DOWN'\cf8 ):
\f5 \cf0 \

\f2 \cf8 GPIO.output(\cf10 4\cf8 , GPIO.HIGH)
\f5 \cf0 \

\f2 \cf8 GPIO.output(\cf10 17\cf8 , GPIO.LOW)
\f5 \cf0 \
\

\f2 \cf11 #motor3 UP
\f5 \cf0 \

\f2 \cf12 if\cf8  (data == \cf13 'Motor3UP'\cf8 ):
\f5 \cf0 \

\f2 \cf8 GPIO.output(\cf10 27\cf8 , GPIO.LOW)
\f5 \cf0 \

\f2 \cf8 GPIO.output(\cf10 22\cf8 , GPIO.HIGH)
\f5 \cf0 \
\

\f2 \cf11 #motor3 STOP
\f5 \cf0 \

\f2 \cf12 if\cf8  (data == \cf13 'Motor3STOP'\cf8 ):
\f5 \cf0 \

\f2 \cf8 GPIO.output(\cf10 27\cf8 , GPIO.HIGH)
\f5 \cf0 \

\f2 \cf8 GPIO.output(\cf10 22\cf8 , GPIO.HIGH)
\f5 \cf0 \
\

\f2 \cf11 #motor3 DOWN
\f5 \cf0 \

\f2 \cf12 if\cf8  (data == \cf13 'Motor3DOWN'\cf8 ):
\f5 \cf0 \

\f2 \cf8 GPIO.output(\cf10 27\cf8 , GPIO.HIGH)
\f5 \cf0 \

\f2 \cf8 GPIO.output(\cf10 22\cf8 , GPIO.LOW)
\f5 \cf0 \
\

\f2 \cf11 #motor4 UP
\f5 \cf0 \

\f2 \cf12 if\cf8  (data == \cf13 'Motor4UP'\cf8 ):
\f5 \cf0 \

\f2 \cf8 GPIO.output(\cf10 10\cf8 , GPIO.LOW)
\f5 \cf0 \

\f2 \cf8 GPIO.output(\cf10 9\cf8 , GPIO.HIGH)
\f5 \cf0 \
\

\f2 \cf11 #motor4 STOP
\f5 \cf0 \

\f2 \cf12 if\cf8  (data == \cf13 'Motor4STOP'\cf8 ):
\f5 \cf0 \

\f2 \cf8 GPIO.output(\cf10 10\cf8 , GPIO.HIGH)
\f5 \cf0 \

\f2 \cf8 GPIO.output(\cf10 9\cf8 , GPIO.HIGH)
\f5 \cf0 \
\

\f2 \cf11 #motor4 DOWN
\f5 \cf0 \

\f2 \cf12 if\cf8  (data == \cf13 'Motor4DOWN'\cf8 ):
\f5 \cf0 \

\f2 \cf8 GPIO.output(\cf10 10\cf8 , GPIO.HIGH)
\f5 \cf0 \

\f2 \cf8 GPIO.output(\cf10 9\cf8 , GPIO.LOW)
\f5 \cf0 \
\

\f2 \cf8 print data
\f5 \cf0 \
\

\f2 \cf8 factory = Factory()
\f5 \cf0 \

\f2 \cf8 factory.protocol = RaspberryLight
\f5 \cf0 \

\f2 \cf8 factory.clients = []
\f5 \cf0 \
\

\f2 \cf8 reactor.listenTCP(\cf10 7777\cf8 , factory)
\f5 \cf0 \

\f2 \cf8 print \cf13 "RaspberryLight server started"
\f5 \cf0 \

\f2 \cf8 reactor.run()
\f5 \cf0 \
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\
\
# for a test we can start our server\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs24 \cf14 \cb15 \kerning1\expnd0\expndtw0 \CocoaLigature0 sudo nice -n 10 python /home/pi/iphoneserver.py
\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\
# ctrl+c to stop server\
# after all tests we can >sudo nano /etc/rc.local to make bootable our server after restart\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs24 \cf16 \cb15 \kerning1\expnd0\expndtw0 \CocoaLigature0 #!/bin/sh -e\cf14 \
\cf16 #\cf14 \
\cf16 # rc.local\cf14 \
\cf16 #\cf14 \
\cf16 # This script is executed at the end of each multiuser runlevel.\cf14 \
\cf16 # Make sure that the script will \cf17 "exit 0"\cf16  on success or any other\cf14 \
\cf16 # value on error.\cf14 \
\cf16 #\cf14 \
\cf16 # In order to enable or disable this script just change the execution\cf14 \
\cf16 # bits.\cf14 \
\cf16 #\cf14 \
\cf16 # By default this script does nothing.\cf14 \
\
\cf16 # Print the IP address\cf14 \
_IP\cf18 =$(\cf14 hostname -I\cf18 )\cf14  \cf18 ||\cf14  true\
\cf18 if\cf14  \cf18 [\cf14  \cf17 "$_IP"\cf14  \cf18 ];\cf14  \cf18 then\cf14 \
  \cf19 printf\cf14  \cf17 "My IP address is %s\\n"\cf14  \cf17 "$_IP"\cf14 \
\cf18 fi\
sudo ap MotorControl chainmaster\cf14 \
sudo nice \cf18 -n\cf14  10 python /home/pi/iphoneserver.py \cf18 &\cf14 \
\cf18 exit\cf14  0\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\
# and finaly\
\
>sudo reboot\
\
\
\
##########   IOS APPLICATION CODE   ##########\
\
\
}