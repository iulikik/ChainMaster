{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fmodern\fcharset0 Courier;\f1\fnil\fcharset0 AndaleMono;\f2\fnil\fcharset0 Monaco;
\f3\fnil\fcharset0 Menlo-Regular;\f4\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red44\green44\blue44;\red0\green0\blue0;\red28\green28\blue28;
\red247\green247\blue247;\red0\green0\blue0;\red27\green31\blue34;\red244\green246\blue249;\red255\green255\blue255;
\red215\green0\blue143;\red31\green32\blue41;\red225\green226\blue231;\red20\green156\blue146;\red69\green187\blue62;
\red211\green35\blue46;\red116\green109\blue176;\red47\green255\blue18;\red0\green0\blue0;\red46\green174\blue187;
\red159\green160\blue28;\red47\green180\blue29;\red64\green11\blue217;}
{\*\expandedcolortbl;;\cssrgb\c22745\c22745\c22745;\csgray\c0\c0;\cssrgb\c14510\c14510\c14510;
\cssrgb\c97647\c97647\c97647;\cssrgb\c0\c0\c0;\cssrgb\c14118\c16078\c18039;\cssrgb\c96471\c97255\c98039;\cssrgb\c100000\c100000\c100000;
\csgenericrgb\c84398\c0\c55980;\csgenericrgb\c12157\c12549\c16078;\csgenericrgb\c88217\c88535\c90427;\csgenericrgb\c7843\c61177\c57255;\csgenericrgb\c26985\c73392\c24249;
\csgenericrgb\c82745\c13725\c18039;\csgenericrgb\c45490\c42745\c69020;\cssrgb\c15686\c99608\c7843;\csgray\c0\c90000;\cssrgb\c20198\c73241\c78251;
\cssrgb\c68469\c68013\c14209;\cssrgb\c20239\c73899\c14948;\cssrgb\c32309\c18668\c88228;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\margl1440\margr1440\vieww13040\viewh11920\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
# a guide to install server for motor_control\
\
# after burning the raspberry pi os img to SD card, enable SSH by creating an empty file in the root of SD card, named ssh (without any extention)\
\
# for next method of connection using a FT232RL usb to TTL communicator we have to enable uart by adding this line in \cf4 \cb5 /boot/config.txt\cf2 \cb3  on SD card\
\
>\cf4 \cb5 enable_uart=1\cf2 \cb3 \
\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf2 # i was able to access the raspberry through serial port using an FT232RL usb to TTL communicator using this command (cu.usbserial-******** may differ, but boudrate remains the same 115200)\
\
>sudo screen /dev/cu.usbserial-00000000 115200\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf2 \
\
\
# in case your SSH key not working and you get something like this\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs24 \cf6 \kerning1\expnd0\expndtw0 \CocoaLigature0 #@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\
#@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @\
#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
\f0\fs28 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf2 \
# use this command\
\
>ssh-keygen -R "you server hostname or ip"\
\pard\pardeftab720\partightenfactor0
\cf2 \
# enable root access (not obligatory)\
\
>sudo passwd root\
\
# so, now lets update and upgrade our raspberry pi and install additional libraries\
\
\
>sudo apt-get update\
>sudo apt-get dist-upgrade\
>sudo apt-get install rpi.gpio\
>sudo apt-get install python-twisted\
\
# this is how to make a hotspot from our raspberry pi (but don't forget to include our command in /etc/rc.local)\
\
\pard\pardeftab720\partightenfactor0
\cf7 \cb8 >git clone https://github.com/quangthanh010290/RPI3_HOTSPOTS.git\
>sudo ./install.sh\cf2 \cb3 \
\pard\pardeftab720\partightenfactor0
\cf7 \cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf7 \cb9 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Station mode: sudo sta [SSID] [password] - Connect to a network with specific ssid name and password ,example:\cb1 \
\pard\pardeftab720\partightenfactor0
\cf7 \cb8 >sudo sta mySSID  myPass\
\pard\pardeftab720\partightenfactor0
\cf7 \cb9 \kerning1\expnd0\expndtw0 	\'95	\expnd0\expndtw0\kerning0
AP mode: sudo ap [SSID] [pass] - Create an wifi hotspot with specific ssid and pass ,example:\cb1 \
\pard\pardeftab720\partightenfactor0
\cf7 \cb8 >sudo ap my_ssid 12345678\cf2 \cb3 \
\
# do not forget to make our raspberry pi have a static ip address \
\
\pard\pardeftab720\partightenfactor0

\f2 \cf2 \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97 this part is missing for now \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97
\f0 \
\
# lets create our script\
\
>sudo nano /home/pi/iphoneserver.py\
\
# here\'92s the script:\
\
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f3\fs24 \cf10 \cb11 \kerning1\expnd0\expndtw0 from\cf12  twisted.internet.protocol \cf10 import\cf12  Protocol, Factory
\f4 \cf0 \

\f3 \cf10 from\cf12  twisted.internet \cf10 import\cf12  reactor
\f4 \cf0 \
\

\f3 \cf10 import\cf12  RPi.GPIO \cf10 as\cf12  GPIO
\f4 \cf0 \
\

\f3 \cf12 GPIO.setmode(GPIO.BCM)
\f4 \cf0 \
\

\f3 \cf12 pinList = [\cf13 2\cf12 , \cf13 3\cf12 , \cf13 4\cf12 , \cf13 17\cf12 , \cf13 27\cf12 , \cf13 22\cf12 , \cf13 10\cf12 , \cf13 9\cf12 , \cf13 11\cf12 , \cf13 5\cf12 , \cf13 6\cf12 , \cf13 13\cf12 , \cf13 19\cf12 , \cf13 26\cf12 , \cf13 16\cf12 , \cf13 20\cf12 ]
\f4 \cf0 \
\

\f3 \cf14 # loop through pins and set mode and state to 'low'
\f4 \cf0 \
\

\f3 \cf10 for\cf12  i \cf10 in\cf12  pinList:
\f4 \cf0 \

\f3 \cf12     GPIO.setup(i, GPIO.OUT)
\f4 \cf0 \

\f3 \cf10 for\cf12  i \cf10 in\cf12  pinList:
\f4 \cf0 \

\f3 \cf12     GPIO.output(i, GPIO.HIGH)
\f4 \cf0 \
\

\f3 \cf10 class\cf12  RaspberryLight(Protocol):
\f4 \cf0 \

\f3 \cf12     \cf10 def\cf12  connectionMade(self):
\f4 \cf0 \

\f3 \cf12         \cf14 #self.transport.write("""connected""")
\f4 \cf0 \

\f3 \cf12         self.factory.clients.append(self)
\f4 \cf0 \

\f3 \cf12         \cf10 print\cf12  \cf15 "clients are "\cf12 , self.factory.clients
\f4 \cf0 \

\f3 \cf12     
\f4 \cf0 \

\f3 \cf12     \cf10 def\cf12  connectionLost(self, reason):
\f4 \cf0 \

\f3 \cf12         \cf10 print\cf12  \cf15 "connection lost "\cf12 , self.factory.clients
\f4 \cf0 \

\f3 \cf12         self.factory.clients.remove(self)
\f4 \cf0 \
\

\f3 \cf12     \cf10 def\cf12  dataReceived(self, data):
\f4 \cf0 \
\

\f3 \cf14 # ------------------------- 1 ------------
\f4 \cf0 \
\

\f3 \cf14 #motor1 UP
\f4 \cf0 \

\f3 \cf12         \cf10 if\cf12  (data == \cf16 'Motor1UP'\cf12 ):
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 2\cf12 , GPIO.LOW)
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 3\cf12 , GPIO.HIGH)
\f4 \cf0 \
\

\f3 \cf14 #motor1 STOP
\f4 \cf0 \

\f3 \cf12         \cf10 if\cf12  (data == \cf16 'Motor1STOP'\cf12 ):
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 2\cf12 , GPIO.HIGH)
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 3\cf12 , GPIO.HIGH)
\f4 \cf0 \
\

\f3 \cf14 #motor1 DOWN
\f4 \cf0 \

\f3 \cf12         \cf10 if\cf12  (data == \cf16 'Motor1DOWN'\cf12 ):
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 2\cf12 , GPIO.HIGH)
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 3\cf12 , GPIO.LOW)
\f4 \cf0 \
\

\f3 \cf14 # ------------------------- 2 ------------
\f4 \cf0 \
\

\f3 \cf14 #motor2 UP
\f4 \cf0 \

\f3 \cf12         \cf10 if\cf12  (data == \cf16 'Motor2UP'\cf12 ):
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 4\cf12 , GPIO.LOW)
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 17\cf12 , GPIO.HIGH)
\f4 \cf0 \
\

\f3 \cf14 #motor2 STOP
\f4 \cf0 \

\f3 \cf12         \cf10 if\cf12  (data == \cf16 'Motor2STOP'\cf12 ):
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 4\cf12 , GPIO.HIGH)
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 17\cf12 , GPIO.HIGH)
\f4 \cf0 \
\

\f3 \cf14 #motor2 DOWN
\f4 \cf0 \

\f3 \cf12         \cf10 if\cf12  (data == \cf16 'Motor2DOWN'\cf12 ):
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 4\cf12 , GPIO.HIGH)
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 17\cf12 , GPIO.LOW)
\f4 \cf0 \
\

\f3 \cf14 # ------------------------- 3 ------------
\f4 \cf0 \
\

\f3 \cf14 #motor3 UP
\f4 \cf0 \

\f3 \cf12         \cf10 if\cf12  (data == \cf16 'Motor3UP'\cf12 ):
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 27\cf12 , GPIO.LOW)
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 22\cf12 , GPIO.HIGH)
\f4 \cf0 \
\

\f3 \cf14 #motor3 STOP
\f4 \cf0 \

\f3 \cf12         \cf10 if\cf12  (data == \cf16 'Motor3STOP'\cf12 ):
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 27\cf12 , GPIO.HIGH)
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 22\cf12 , GPIO.HIGH)
\f4 \cf0 \
\

\f3 \cf14 #motor3 DOWN
\f4 \cf0 \

\f3 \cf12         \cf10 if\cf12  (data == \cf16 'Motor3DOWN'\cf12 ):
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 27\cf12 , GPIO.HIGH)
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 22\cf12 , GPIO.LOW)
\f4 \cf0 \
\

\f3 \cf14 # ------------------------- 4 ------------
\f4 \cf0 \
\

\f3 \cf14 #motor4 UP
\f4 \cf0 \

\f3 \cf12         \cf10 if\cf12  (data == \cf16 'Motor4UP'\cf12 ):
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 10\cf12 , GPIO.LOW)
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 9\cf12 , GPIO.HIGH)
\f4 \cf0 \
\

\f3 \cf14 #motor4 STOP
\f4 \cf0 \

\f3 \cf12         \cf10 if\cf12  (data == \cf16 'Motor4STOP'\cf12 ):
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 10\cf12 , GPIO.HIGH)
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 9\cf12 , GPIO.HIGH)
\f4 \cf0 \
\

\f3 \cf14 #motor4 DOWN
\f4 \cf0 \

\f3 \cf12         \cf10 if\cf12  (data == \cf16 'Motor4DOWN'\cf12 ):
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 10\cf12 , GPIO.HIGH)
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 9\cf12 , GPIO.LOW)
\f4 \cf0 \
\

\f3 \cf14 # ------------------------- 5 ------------
\f4 \cf0 \
\

\f3 \cf14 #motor5 UP
\f4 \cf0 \

\f3 \cf12         \cf10 if\cf12  (data == \cf16 'Motor5UP'\cf12 ):
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 11\cf12 , GPIO.LOW)
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 5\cf12 , GPIO.HIGH)
\f4 \cf0 \
\

\f3 \cf14 #motor5 STOP
\f4 \cf0 \

\f3 \cf12         \cf10 if\cf12  (data == \cf16 'Motor5STOP'\cf12 ):
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 11\cf12 , GPIO.HIGH)
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 5\cf12 , GPIO.HIGH)
\f4 \cf0 \
\

\f3 \cf14 #motor5 DOWN
\f4 \cf0 \

\f3 \cf12         \cf10 if\cf12  (data == \cf16 'Motor5DOWN'\cf12 ):
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 11\cf12 , GPIO.HIGH)
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 5\cf12 , GPIO.LOW)
\f4 \cf0 \
\

\f3 \cf14 # ------------------------- 6 ------------
\f4 \cf0 \
\

\f3 \cf14 #motor6 UP
\f4 \cf0 \

\f3 \cf12         \cf10 if\cf12  (data == \cf16 'Motor6UP'\cf12 ):
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 6\cf12 , GPIO.LOW)
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 13\cf12 , GPIO.HIGH)
\f4 \cf0 \
\

\f3 \cf14 #motor6 STOP
\f4 \cf0 \

\f3 \cf12         \cf10 if\cf12  (data == \cf16 'Motor6STOP'\cf12 ):
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 6\cf12 , GPIO.HIGH)
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 13\cf12 , GPIO.HIGH)
\f4 \cf0 \
\

\f3 \cf14 #motor6 DOWN
\f4 \cf0 \

\f3 \cf12         \cf10 if\cf12  (data == \cf16 'Motor6DOWN'\cf12 ):
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 6\cf12 , GPIO.HIGH)
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 13\cf12 , GPIO.LOW)
\f4 \cf0 \
\
\

\f3 \cf14 # ------------------------- 7 ------------
\f4 \cf0 \
\

\f3 \cf14 #motor7 UP
\f4 \cf0 \

\f3 \cf12         \cf10 if\cf12  (data == \cf16 'Motor7UP'\cf12 ):
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 19\cf12 , GPIO.LOW)
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 26\cf12 , GPIO.HIGH)
\f4 \cf0 \
\

\f3 \cf14 #motor7 STOP
\f4 \cf0 \

\f3 \cf12         \cf10 if\cf12  (data == \cf16 'Motor7STOP'\cf12 ):
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 19\cf12 , GPIO.HIGH)
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 26\cf12 , GPIO.HIGH)
\f4 \cf0 \
\

\f3 \cf14 #motor7 DOWN
\f4 \cf0 \

\f3 \cf12         \cf10 if\cf12  (data == \cf16 'Motor7DOWN'\cf12 ):
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 19\cf12 , GPIO.HIGH)
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 26\cf12 , GPIO.LOW)
\f4 \cf0 \
\

\f3 \cf14 # ------------------------- 8 ------------
\f4 \cf0 \
\

\f3 \cf14 #motor8 UP
\f4 \cf0 \

\f3 \cf12         \cf10 if\cf12  (data == \cf16 'Motor8UP'\cf12 ):
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 16\cf12 , GPIO.LOW)
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 20\cf12 , GPIO.HIGH)
\f4 \cf0 \
\

\f3 \cf14 #motor8 STOP
\f4 \cf0 \

\f3 \cf12         \cf10 if\cf12  (data == \cf16 'Motor8STOP'\cf12 ):
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 16\cf12 , GPIO.HIGH)
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 20\cf12 , GPIO.HIGH)
\f4 \cf0 \
\

\f3 \cf14 #motor8 DOWN
\f4 \cf0 \

\f3 \cf12         \cf10 if\cf12  (data == \cf16 'Motor8DOWN'\cf12 ):
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 16\cf12 , GPIO.HIGH)
\f4 \cf0 \

\f3 \cf12                 GPIO.output(\cf13 20\cf12 , GPIO.LOW)
\f4 \cf0 \
\
\

\f3 \cf12         \cf10 print\cf12  data
\f4 \cf0 \
\

\f3 \cf12 factory = Factory()
\f4 \cf0 \

\f3 \cf12 factory.protocol = RaspberryLight
\f4 \cf0 \

\f3 \cf12 factory.clients = []
\f4 \cf0 \
\

\f3 \cf12 reactor.listenTCP(\cf13 7777\cf12 , factory)
\f4 \cf0 \

\f3 \cf10 print\cf12  \cf15 "RaspberryLight server started"
\f4 \cf0 \

\f3 \cf12 reactor.run()
\f4 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
 \
\pard\pardeftab720\partightenfactor0
\cf2 \
# for a test we can start our server\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs24 \cf17 \cb18 \kerning1\expnd0\expndtw0 \CocoaLigature0 sudo nice -n 10 python /home/pi/iphoneserver.py
\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\
# ctrl+c to stop server\
# after all tests we can >sudo nano /etc/rc.local to make bootable our server after restart\
\

\f1\fs24 \cf19 \cb18 \kerning1\expnd0\expndtw0 \CocoaLigature0 #!/bin/sh -e\cf17 \
\cf19 #\cf17 \
\cf19 # rc.local\cf17 \
\cf19 #\cf17 \
\cf19 # This script is executed at the end of each multiuser runlevel.\cf17 \
\cf19 # Make sure that the script will \cf20 "exit 0"\cf19  on success or any other\cf17 \
\cf19 # value on error.\cf17 \
\cf19 #\cf17 \
\cf19 # In order to enable or disable this script just change the execution\cf17 \
\cf19 # bits.\cf17 \
\cf19 #\cf17 \
\cf19 # By default this script does nothing.\cf17 \
\
\cf19 # Print the IP address\cf17 \
_IP\cf21 =$(\cf17 hostname -I\cf21 )\cf17  \cf21 ||\cf17  true\
\cf21 if\cf17  \cf21 [\cf17  \cf20 "$_IP"\cf17  \cf21 ];\cf17  \cf21 then\cf17 \
  \cf22 printf\cf17  \cf20 "My IP address is %s\\n"\cf17  \cf20 "$_IP"\cf17 \
\cf21 fi\
sudo ap MotorControl chainmaster	\cf19 # this command creates a wireless hotspot named 'MotorControl' with password chainmaster\cf17 \
sudo nice \cf21 -n\cf17  10 python /home/pi/iphoneserver.py \cf21 &  \cf19 # this command boot our server\cf17 \
\cf21 exit\cf17  0\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\
# and finaly\
\
>sudo reboot\
\
\
\
##########   IOS APPLICATION CODE   ##########\
\
\
}